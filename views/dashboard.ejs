<div class="container container-full-width">

    <div class="page-header">
        <h1 class="page-title"><i class="fas fa-tachometer-alt"></i> Welcome to your Dashboard </h1>
        <p class="page-subtitle"><%= new Date().toLocaleDateString('en-US', {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric'}) %></p>
    </div>

    <section class="cards cards-5">
		
        <div class="card">
            <h4><div class="card-icon"><i class="fas fa-user-clock"></i></div> Today's Status </h4>
            <div class="card-body">
                <div class="card-item">
                    <div class="card-item-label">Clock In:</div>
                    <div class="card-item-value">
                        <% if (dashboardData.activeEntry) { %>
                            <%= new Date(dashboardData.activeEntry.start_time).toLocaleTimeString() %>
                        <% } else { %>
                            Not clocked in
                        <% } %>
                    </div>
                </div>
                <div class="card-item">
                    <div class="card-item-label">Remaining Time:</div>
                    <div class="card-item-value"><%= dashboardData.remainingHoursToday || '8h 0m' %> hours</div>
                </div>
                <% if (dashboardData.activeEntry) { %>
                    <% if (dashboardData.activeEntry.last_break_start_time && !dashboardData.activeEntry.last_break_end_time) { %>
                        <div class="card-item">
                            <span class="card-item-label">Status:</span>
                            <span class="card-item-value status-break">On Break</span>
                        </div>
                    <% } else if (dashboardData.activeEntry.last_unavailable_start_time && !dashboardData.activeEntry.last_unavailable_end_time) { %>
                        <div class="card-item">
                            <span class="card-item-label">Status:</span>
                            <span class="card-item-value status-unavailable">Unavailable</span>
                        </div>
                    <% } else { %>
                        <div class="card-item">
                            <span class="card-item-label">Status:</span>
                            <span class="card-item-value status-active">Active</span>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="card-item">
                        <span class="card-item-label">Status:</span>
                        <span class="card-item-value text-muted">Not clocked in</span>
                    </div>
                <% } %>
            </div>
            <div class="card-footer">
                <div class="button-group">
                    <a href="/timesheet" class="btn btn-primary"> View Timesheet </a>
                </div>
            </div>
        </div>

        <div class="card">
            <h4><div class="card-icon"><i class="fas fa-clock"></i></div> Time Tracking </h4>
            <div class="card-body">
                <p>Manage your work hours and breaks</p>
            </div>
            <div class="card-footer">
                <div class="button-group">
                    <a href="/timesheet" class="btn btn-primary"> Go to Timesheet </a>
                </div>
            </div>
        </div>

        <div class="card">
            <h4><div class="card-icon"><i class="fas fa-calendar-alt"></i></div> Leave Balance </h4>
            <div class="card-body">
                <div class="card-item">
                    <div class="card-item-label">Leaves Used:</div>
                    <div class="card-item-value"><%= leaveData.leavesUsed %></div>
                </div>
                <div class="card-item">
                    <div class="card-item-label">Total Quota:</div>
                    <div class="card-item-value"><%= leaveData.totalQuota %></div>
                </div>
            </div>
            <div class="card-footer">
                <div class="button-group">
                    <a href="/leave/apply" class="btn btn-primary"> View Details </a>
                </div>
            </div>
        </div>

        <div class="card">
            <h4><div class="card-icon"><i class="fas fa-calendar"></i></div> Leave </h4>
            <div class="card-body">
                <p>Apply for leaves and check your balance</p>
            </div>
            <div class="card-footer">
                <div class="button-group">
                    <a href="/leave/apply" class="btn btn-primary"> Apply Leave </a>
                </div>
            </div>
        </div>

        <div class="card">
            <h4><div class="card-icon"><i class="fas fa-chart-line"></i></div> Reports </h4>
            <div class="card-body">
                <p>View your productivity metrics</p>
            </div>
            <div class="card-footer">
                <div class="button-group">
                    <a href="/timesheet#clock-in-entries" class="btn btn-primary"> View Report </a>
                </div>
            </div>
        </div>

    </section>

</div>

<!-- Dashboard Scripts -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const clockInBtn = document.getElementById('clockInBtn');
    const messageContainer = document.getElementById('clock-in-message');

    if (clockInBtn) {
        clockInBtn.addEventListener('click', async function() {
            try {
                // Disable button and show loading state
                clockInBtn.disabled = true;
                clockInBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Processing...';

                const response = await fetch('/api/clock-in', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${localStorage.getItem('token')}` // Add JWT Auth header
                    }
                });

                if (response.ok) {
                    showMessage('success', 'Successfully clocked in! Redirecting to timesheet...');
                    setTimeout(() => {
                        window.location.href = '/timesheet';
                    }, 1500);
                } else {
                    const data = await response.json();
                    showMessage('error', `Error: ${data.error}`);
                    // Re-enable button
                    clockInBtn.disabled = false;
                    clockInBtn.innerHTML = 'Clock In Now';
                }
            } catch (error) {
                console.error('Error:', error);
                showMessage('error', 'An unexpected error occurred. Please try again.');
                // Re-enable button
                clockInBtn.disabled = false;
                clockInBtn.innerHTML = 'Clock In Now';
            }
        });
    }

    // Helper function to show messages
    function showMessage(type, message) {
        if (messageContainer) {
            messageContainer.innerHTML = `<div class="alert alert-${type}">${message}</div>`;
            // Auto-hide success messages after 5 seconds
            if (type === 'success') {
                setTimeout(() => {
                    messageContainer.innerHTML = '';
                }, 5000);
            }
        }
    }
});
    // Function to apply dark mode styles to Recent Time Entries table
    function applyDarkModeToRecentEntriesTable() {
        if (document.body.classList.contains('dark-mode')) {
            // Get all rows in the table body
            const rows = document.querySelectorAll('.recent-entries-section .table tbody tr');

            // Apply dark background to each row
            rows.forEach((row, index) => {
                // Clear any existing background
                row.style.backgroundColor = 'transparent';

                // Apply alternating row colors
                if (index % 2 === 0) {
                    row.style.backgroundColor = '#1a1a1a';
                } else {
                    row.style.backgroundColor = '#121220';
                }

                // Make sure text is white
                row.style.color = '#ffffff';

                // Apply styles to all cells in the row
                const cells = row.querySelectorAll('td');
                cells.forEach(cell => {
                    cell.style.backgroundColor = 'transparent';
                    cell.style.color = '#ffffff';
                });
            });

            // Style the table header
            const headerCells = document.querySelectorAll('.recent-entries-section .table thead th');
            headerCells.forEach(cell => {
                cell.style.backgroundColor = '#1a202c';
                cell.style.color = '#ffffff';
                cell.style.borderColor = '#2d3748';
            });
        }
    }

    // Apply dark mode styles if dark mode is active
    applyDarkModeToRecentEntriesTable();

    // Watch for theme changes
    const themeToggle = document.getElementById('themeToggle');
    if (themeToggle) {
        themeToggle.addEventListener('click', function() {
            // Wait a moment for the dark-mode class to be applied/removed
            setTimeout(applyDarkModeToRecentEntriesTable, 100);
        });
    }
</script>

<!-- Add this to your CSS file or in a style tag -->
<style>
.message-container {
    margin-top: 15px;
}

.alert {
    padding: 10px;
    border-radius: 4px;
    margin-bottom: 15px;
}

.alert-success {
    background-color: #d4edda;
    color: #155724;
    border: 1px solid #c3e6cb;
}

.alert-error {
    background-color: #f8d7da;
    color: #721c24;
    border: 1px solid #f5c6cb;
}

.status-break {
    color: #fd7e14;
}

.status-unavailable {
    color: #6c757d;
}

.status-active {
    color: #28a745;
}

.table-responsive {
    overflow-x: auto;
    margin-bottom: 2rem;
}

.recent-entries-section {
    margin: 2rem 0;
}

.recent-entries-section h2 {
    margin-bottom: 1rem;
}
</style>