<div class="container">
    <h1 class="text-center mb-4">Apply for Leave</h1>
    
    <div class="leave-stats mb-4">
        <div class="leave-stat-card">
            <h4>Total Leave Quota</h4>
            <h3><%= leaveData.totalQuota %> days</h3>
        </div>
        
        <div class="leave-stat-card">
            <h4>Leaves Used</h4>
            <h3><%= leaveData.leavesUsed %> days</h3>
        </div>
        
        <div class="leave-stat-card">
            <h4>Leaves Remaining</h4>
            <h3 id="leaves-remaining"><%= leaveData.leavesRemaining %> days</h3>
        </div>
    </div>
    
    <!-- Add actual leave request form -->
    <div class="feature-card animated">
        <h2>Request Leave</h2>
        <div class="card-body">
            <% if (locals.errorMessage) { %>
                <div class="alert alert-danger"><%= errorMessage %></div>
            <% } %>
            <% if (locals.successMessage) { %>
                <div class="alert alert-success"><%= successMessage %></div>
            <% } %>
            
            <form id="leaveRequestForm" class="leaveRequestForm" method="POST" action="/leave">
                <div class="row mb-3">
                    <div class="form-group">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" name="startDate" required>
                    </div>
                    <div class="form-group">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" name="endDate" required>
                    </div>
                </div>
                
                  <div class="form-group mb-3">
                    <label for="leaveType" class="form-label">Leave Type</label>
                    <select class="TimeManager-form-select" id="leaveType" name="leaveType" aria-label="Leave Type" required>
                        <option value="Annual leave">Annual Leave</option>
                        <option value="Sick leave">Sick Leave</option>
                        <option value="Personal leave">Personal Leave</option>
                        <option value="Unpaid leave">Unpaid Leave</option>
                    </select>
                </div>

                <input type="hidden" id="totalLeaveDays" name="totalLeaveDays" value="0">
                
                <div class="mb-3">
                    <label for="reason" class="form-label">Reason for Leave</label>
                    <textarea class="form-control" id="reason" name="reason" rows="3" required></textarea>
                </div>

                <div id="daysRequested" class="mt-2">
                    Days requested: <span id="totalDays">0</span>
                </div>
                
                <input type="hidden" name="id" id="editLeaveId" value="">

                <div class="button-group d-flex gap-2">
                  <button type="submit" class="btn btn-primary" id="formSubmitBtn">Submit Request</button>
                  <button type="button" class="btn btn-secondary display-none" id="cancelEditBtn">Cancel Edit</button>
                </div>
            </form>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h2>My Leave History</h2>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Type</th>
                        <th>Days</th>
                        <th>Reason</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (leaveHistory.length === 0) { %>
                        <tr>
                            <td colspan="6" class="text-center">No leave history available.</td>
                        </tr>
                    <% } else { %>
                        <% leaveHistory.forEach(leave => { %>
                            <tr>
                                <td><%= new Date(leave.start_date).toLocaleDateString() %></td>
                                <td><%= new Date(leave.end_date).toLocaleDateString() %></td>
                                <td><%= leave.leave_type %></td>
                                <td><%= leave.days || 'N/A' %></td>
                                <td><%= leave.reason %></td>
                                <td><%= leave.status %></td>
                                <td>
                                    <% if (leave.status === 'Pending') { %>
                                        <button class="btn btn-secondary btn-sm edit-leave"
                                                data-id="<%= leave.id %>"
                                                data-start="<%= leave.start_date %>"
                                                data-end="<%= leave.end_date %>"
                                                data-type="<%= leave.leave_type %>"
                                                data-reason="<%= leave.reason %>">
                                          Edit
                                        </button>
                                      <% } else { %>
                                        <span class="text-muted">Locked</span>
                                      <% } %>
                                </td>
                            </tr>
                            <% }); %>
                        <% } %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
        const form = document.getElementById('leaveRequestForm');
        const formInputs = form.querySelectorAll('input, select, textarea');
        const totalDaysSpan = document.getElementById('totalDays');


        document.addEventListener('DOMContentLoaded', function() {
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const totalDaysSpan = document.getElementById('totalDays');
            const leavesRemaining = parseInt(document.getElementById('leaves-remaining').textContent);
            
            // Set minimum date to today
            const today = new Date();
            const yyyy = today.getFullYear();
            const mm = String(today.getMonth() + 1).padStart(2, '0');
            const dd = String(today.getDate()).padStart(2, '0');
            const todayFormatted = `${yyyy}-${mm}-${dd}`;
            
            startDateInput.min = todayFormatted;
            endDateInput.min = todayFormatted;
            
            // Calculate business days between two dates (excluding weekends)
            function calculateBusinessDays(startDate, endDate) {
                let count = 0;
                let currentDate = new Date(startDate);
                const end = new Date(endDate);
                
                while (currentDate <= end) {
                    const dayOfWeek = currentDate.getDay();
                    if (dayOfWeek !== 0 && dayOfWeek !== 6) {
                        count++;
                    }
                    currentDate.setDate(currentDate.getDate() + 1);
                }
                
                return count;
            }
            
            
            // Update the days calculation when dates change
            function updateDaysCalculation() {
                if (startDateInput.value && endDateInput.value) {
                    const startDate = new Date(startDateInput.value);
                    const endDate = new Date(endDateInput.value);

                    if (endDate < startDate) {
                        endDateInput.value = startDateInput.value;
                        totalDaysSpan.textContent = '1';
                        document.getElementById('totalLeaveDays').value = 1;
                        return;
                    }
                

                    const days = calculateBusinessDays(startDate, endDate);
                    totalDaysSpan.textContent = days;
                    document.getElementById('totalLeaveDays').value = days;

                    if (days > leavesRemaining) {
                        totalDaysSpan.classList.add('text-danger', 'fw-bold');
                    } else {
                        totalDaysSpan.classList.remove('text-danger', 'fw-bold');
                    }
                }
            }   
        
        startDateInput.addEventListener('change', updateDaysCalculation);
        endDateInput.addEventListener('change', updateDaysCalculation);
        
        // Form validation
        document.getElementById('leaveRequestForm').addEventListener('submit', function(e) {
            const days = parseInt(totalDaysSpan.textContent);
            
            if (days <= 0) {
                e.preventDefault();
                alert('Please select a valid date range.');
                return false;
            }
            
            if (days > leavesRemaining) {
                if (!confirm('The requested leave exceeds your remaining balance. This will be submitted as unpaid leave. Continue?')) {
                    e.preventDefault();
                    return false;
                }
            }
        });
        
        // Handle cancel leave requests
        document.querySelectorAll('.cancel-leave').forEach(button => {
            button.addEventListener('click', function() {
                const leaveId = this.getAttribute('data-id');
                if (confirm('Are you sure you want to cancel this leave request?')) {
                    fetch(`/cancel-leave/${leaveId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.reload();
                        } else {
                            alert('Failed to cancel leave: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while canceling the leave request.');
                    });
                }
            });
        });
    });

    document.querySelectorAll('.edit-leave').forEach(button => {
        button.addEventListener('click', () => {
            const id = button.dataset.id;
            const start = button.dataset.start;
            const end = button.dataset.end;
            const type = button.dataset.type;
            const reason = button.dataset.reason;

            document.getElementById('editLeaveId').value = id;
            document.getElementById('startDate').value = start;
            document.getElementById('endDate').value = end;
            document.getElementById('leaveType').value = type;
            document.getElementById('reason').value = reason;

            // Switch form to edit mode
            document.getElementById('formSubmitBtn').textContent = 'Update Request';
            document.getElementById('leaveRequestForm').setAttribute('action', '/leave/edit');
            document.getElementById('cancelEditBtn').classList.remove('display-none');
        });
    });

    // Cancel edit mode
    document.getElementById('cancelEditBtn').addEventListener('click', () => {
        document.getElementById('editLeaveId').value = '';
        document.getElementById('leaveRequestForm').setAttribute('action', '/leave');
        document.getElementById('formSubmitBtn').textContent = 'Submit Request';
        document.getElementById('cancelEditBtn').classList.add('display-none');
        document.getElementById('leaveRequestForm').reset();
        document.getElementById('totalLeaveDays').value = 0;
        document.getElementById('totalDays').textContent = '0';
    });
</script>